Microsoft (R) Macro Assembler Version 6.11		    11/22/17 19:09:06
4-5-2.asm						     Page 1 - 1


 0000				DATA SEGMENT
 0000 00 00			    INPUTNUM DB 0,0
 0002 00 00			    GUESSNUM DB 0,0
 0004 0000			    GUESSTIME DW 0
 0006 00			    INPUTDIGITS DB 0
 0007				DATA ENDS
 0000				CODE SEGMENT PARA 'CODE'
				    ASSUME CS:CODE, DS:DATA
				    
 0000				MAIN PROC FAR
 0000  E8 014E			    CALL GET_INPUT
 0003  E8 0106			    CALL HIDE_NUMBER
 0006  E8 0022			    CALL GUESS_INPUT
 0009  E8 00AD			    CALL SHOW_ANSWER
 000C  EB F2			    JMP MAIN
 000E				MAIN ENDP

 000E				INC_GUESSTIME PROC NEAR
				    ; MOV AX, DATA ; DEBUG
 000E  B8 0080			    MOV AX, 0080H ; PRODUCT
 0011  8E D8			    MOV DS, AX
 0013  8E C0			    MOV ES, AX
 0015  8D 36 0004 R		    LEA SI, GUESSTIME
 0019  8D 3E 0004 R		    LEA DI, GUESSTIME
 001D  FC			    CLD
 001E  AD			    LODSW
 001F  FE C0			    INC AL
 0021  27			    DAA
 0022  86 C4			    XCHG AL, AH
 0024  14 00			    ADC AL, 0
 0026  27			    DAA
 0027  86 C4			    XCHG AL, AH
 0029  AB			    STOSW
 002A  C3			    RET
 002B				INC_GUESSTIME ENDP

 002B				GUESS_INPUT PROC NEAR
				    ; DISPLAY INPUT
 002B  E8 0064			    CALL GUESS_DISPLAY
				    ; READ BUTTON
 002E  B4 00			    MOV AH, 0
 0030  CD 33			    INT 33H
 0032  2C 10			    SUB AL, 10000B
				    ; IF AVAILABLE
 0034  3C 0A			    CMP AL, 10
 0036  77 F3			    JA GUESS_INPUT ; NO
				    ; YES
				    ; END IF
				    ; IF PRESS A
 0038  3C 0A			    CMP AL, 0AH
 003A  75 01			    JNE INPUT_TWO ; NO
 003C  C3			    RET ; YES
				    ; END IF
 003D				INPUT_TWO:
				    ; WRITE TO INPUTNUM
 003D  33 DB			    XOR BX, BX
 003F  8A 1E 0006 R		    MOV BL, BYTE PTR INPUTDIGITS
				    ; MOV CX, DATA ; DEBUG
 0043  B9 0080			    MOV CX, 0080H ; PRODUCT
 0046  8E D9			    MOV DS, CX
 0048  8E C1			    MOV ES, CX
 004A  8D 36 0000 R		    LEA SI, INPUTNUM
 004E  88 00			    MOV BYTE PTR [BX][SI], AL
 0050  FE 06 0006 R		    INC BYTE PTR INPUTDIGITS
				    ; IF INPUT TWO DIGITS
 0054  80 3E 0006 R 02		    CMP BYTE PTR INPUTDIGITS, 2
 0059  75 2E			    JNE CLEAR_INPUT ; NO
 005B  C6 06 0006 R 00		    MOV BYTE PTR INPUTDIGITS, 0 ; YES
				    ; END IF
				    ; INCREASE GUESSTIME
 0060  E8 FFAB			    CALL INC_GUESSTIME
 0063  FC			    CLD
 0064  8D 36 0000 R		    LEA SI, INPUTNUM
 0068  8D 3E 0002 R		    LEA DI, GUESSNUM
				    ; IF INPUT IS BIGGER
 006C  A6			    CMPSB
 006D  77 08			    JA IS_BIGGER ; BIGGER
 006F  72 0F			    JB IS_SMALLER ; SMALLER
				    ; END IF
				    ; IF INPUT IS BIGGER
 0071  A6			    CMPSB
 0072  77 03			    JA IS_BIGGER ; BIGGER
 0074  72 0A			    JB IS_SMALLER ; SMALLER
 0076  C3			    RET ; EQUAL
				    ; END IF
 0077				IS_BIGGER:
 0077  B4 00			    MOV AH, 0
 0079  BA 8000			    MOV DX, 8000H
 007C  CD 30			    INT 30H
 007E  EB AB			    JMP GUESS_INPUT
 0080				IS_SMALLER:
 0080  B4 00			    MOV AH, 0
 0082  BA 0080			    MOV DX, 0080H
 0085  CD 30			    INT 30H
 0087  EB A2			    JMP GUESS_INPUT
 0089				CLEAR_INPUT:
 0089  8D 36 0001 R		    LEA SI, INPUTNUM + 1
				    ; LEA DI, INPUTNUM
				    ; CLD
				    ; MOV CX, 2
				    ; MOV AL, 0
				    ; REP STOSB
 008D  C6 04 00			    MOV BYTE PTR [SI], 0
 0090  EB 99			    JMP GUESS_INPUT
 0092				GUESS_INPUT ENDP

 0092				GUESS_DISPLAY PROC NEAR
				    ; MOV AX, DATA ; DEBUG
 0092  B8 0080			    MOV AX, 0080H ; PRODUCT
 0095  8E D8			    MOV DS, AX
 0097  8D 36 0000 R		    LEA SI, INPUTNUM
 009B  B1 04			    MOV CL, 4
 009D  FC			    CLD
 009E  AC			    LODSB
 009F  8A D0			    MOV DL, AL
 00A1  D2 E2			    SHL DL, CL
 00A3  AC			    LODSB
 00A4  0A D0			    OR DL, AL
 00A6  B4 00			    MOV AH, 0
 00A8  B0 3F			    MOV AL, 00111111B
 00AA  CD 32			    INT 32H
 00AC  B4 02			    MOV AH, 2
 00AE  CD 32			    INT 32H
 00B0  B4 01			    MOV AH, 1
 00B2  8B 16 0004 R		    MOV DX, WORD PTR GUESSTIME
 00B6  CD 32			    INT 32H
 00B8  C3			    RET
 00B9				GUESS_DISPLAY ENDP

 00B9				SHOW_ANSWER PROC NEAR
				    ; CLEAR LED
 00B9  B4 00			    MOV AH, 0
 00BB  BA 0000			    MOV DX, 0
 00BE  CD 30			    INT 30H
				    ; CLEAR TIME
 00C0  B8 0080			    MOV AX, 0080H
 00C3  8E D8			    MOV DS, AX
 00C5  8D 36 0004 R		    LEA SI, GUESSTIME
 00C9  C7 04 0000		    MOV WORD PTR [SI], 0
				    ; DISPLAY ANSWER
				    ; MOV AX, DATA ; DEBUG
 00CD  B8 0080			    MOV AX, 0080H ; PRODUCT
 00D0  8E D8			    MOV DS, AX
 00D2  8E C0			    MOV ES, AX
 00D4  8D 36 0002 R		    LEA SI, GUESSNUM
 00D8  B1 04			    MOV CL, 4
 00DA  FC			    CLD
 00DB  AC			    LODSB
 00DC  8A D0			    MOV DL, AL
 00DE  D2 E2			    SHL DL, CL
 00E0  AC			    LODSB
 00E1  0A D0			    OR DL, AL
 00E3  B4 00			    MOV AH, 0
 00E5  B0 30			    MOV AL, 00110000B
 00E7  CD 32			    INT 32H
 00E9  B4 02			    MOV AH, 2
 00EB  CD 32			    INT 32H
				    ; READ BUTTON
 00ED  B4 00			    MOV AH, 0
 00EF  CD 33			    INT 33H
 00F1  2C 10			    SUB AL, 10000B
				    ; IF AVAILABLE
 00F3  3C 0A			    CMP AL, 10
 00F5  77 C2			    JA SHOW_ANSWER ; NO
				    ; YES
				    ; END IF
				    ; CLEAR INPUTNUM
 00F7  B0 00			    MOV AL, 0
 00F9  8D 3E 0000 R		    LEA DI, INPUTNUM
 00FD  B9 0002			    MOV CX, 2
 0100  F3/ AA			    REP STOSB
				    ; CLEAR GUESSNUM
 0102  8D 3E 0002 R		    LEA DI, GUESSNUM
 0106  B9 0002			    MOV CX, 2
 0109  F3/ AA			    REP STOSB
 010B  C3			    RET
 010C				SHOW_ANSWER ENDP

 010C				HIDE_NUMBER PROC NEAR
				    ; COPY TO GUESSNUM
				    ; MOV BX, DATA ; DEBUG
 010C  BB 0080			    MOV BX, 0080H ; PRODUCT
 010F  8E DB			    MOV DS, BX
 0111  8E C3			    MOV ES, BX
 0113  8D 36 0000 R		    LEA SI, INPUTNUM
 0117  8D 3E 0002 R		    LEA DI, GUESSNUM
 011B  FC			    CLD
 011C  B9 0002			    MOV CX, 2
 011F  F3/ A4			    REP MOVSB
				    ; CLEAR INPUTNUM
 0121  8D 3E 0000 R		    LEA DI, INPUTNUM
 0125  B9 0002			    MOV CX, 2
 0128  B0 00			    MOV AL, 0
 012A  F3/ AA			    REP STOSB
 012C				SET_ALL_F:
				    ; SHOW FFFFFFFF
 012C  B4 00			    MOV AH, 0
 012E  B0 FF			    MOV AL, 0FFFFH
 0130  CD 32			    INT 32H
 0132  BA FFFF			    MOV DX, 0FFFFH
 0135  B4 01			    MOV AH, 1
 0137  CD 32			    INT 32H
 0139  B4 02			    MOV AH, 2
 013B  CD 32			    INT 32H
				    ; READ BUTTON
 013D  B4 00			    MOV AH, 0
 013F  CD 33			    INT 33H
				    ; IF AVAILABLE
 0141  2C 10			    SUB AL, 10000B
 0143  3C 0A			    CMP AL, 10
 0145  73 E5			    JAE SET_ALL_F ; NO
				    ; YES
				    ; END IF
 0147  8D 3E 0000 R		    LEA DI, INPUTNUM
 014B  AA			    STOSB
 014C  FE 06 0006 R		    INC BYTE PTR INPUTDIGITS
 0150  C3			    RET
 0151				HIDE_NUMBER ENDP

 0151				GET_INPUT PROC NEAR
				    ; DISPLAY
 0151  E8 0023			    CALL INPUT_DISPLAY
				    ; READ BUTTON
 0154  B4 00			    MOV AH, 0
 0156  CD 33			    INT 33H
				    ; IF AVAILABLE
 0158  2C 10			    SUB AL, 10000B
 015A  3C 0A			    CMP AL, 10
 015C  77 F3			    JA GET_INPUT ; NO
				    ; YES
				    ; END IF
				    ; IF PRESS A
 015E  3C 0A			    CMP AL, 0AH
 0160  75 01			    JNE INPUT_NUMBER ; NO
 0162  C3			    RET ; YES
				    ; END IF
 0163				INPUT_NUMBER:
				    ; WRITE TO INPUTNUM
				    ; MOV BX, DATA ; DEBUG
 0163  BB 0080			    MOV BX, 0080H ; PRODUCT
 0166  8E DB			    MOV DS, BX
 0168  8E C3			    MOV ES, BX
 016A  8D 36 0001 R		    LEA SI, INPUTNUM + 1
 016E  8D 3E 0000 R		    LEA DI, INPUTNUM
 0172  FC			    CLD
 0173  A4			    MOVSB
 0174  AA			    STOSB
 0175  EB DA			    JMP GET_INPUT
 0177				GET_INPUT ENDP

 0177				INPUT_DISPLAY PROC NEAR
				    ; MOV AX, DATA ; DEBUG
 0177  B8 0080			    MOV AX, 0080H ; PRODUCT
 017A  8E D8			    MOV DS, AX
 017C  8D 36 0000 R		    LEA SI, INPUTNUM
 0180  B1 04			    MOV CL, 4
 0182  FC			    CLD
 0183  AC			    LODSB
 0184  8A D0			    MOV DL, AL
 0186  D2 E2			    SHL DL, CL
 0188  AC			    LODSB
 0189  0A D0			    OR DL, AL
 018B  B4 00			    MOV AH, 0
 018D  B0 3F			    MOV AL, 00111111B
 018F  CD 32			    INT 32H
 0191  B4 02			    MOV AH, 2
 0193  CD 32			    INT 32H
 0195  B4 01			    MOV AH, 1
 0197  BA FFFF			    MOV DX, 0FFFFH
 019A  CD 32			    INT 32H
 019C  C3			    RET
 019D				INPUT_DISPLAY ENDP

 019D				CODE ENDS
				END MAIN
Microsoft (R) Macro Assembler Version 6.11		    11/22/17 19:09:06
4-5-2.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CODE . . . . . . . . . . . . . .	16 Bit	 019D	  Para	  Private 'CODE'	
DATA . . . . . . . . . . . . . .	16 Bit	 0007	  Para	  Private 


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

GET_INPUT  . . . . . . . . . . .	P Near	 0151	  CODE	Length= 0026 Private
GUESS_DISPLAY  . . . . . . . . .	P Near	 0092	  CODE	Length= 0027 Private
GUESS_INPUT  . . . . . . . . . .	P Near	 002B	  CODE	Length= 0067 Private
HIDE_NUMBER  . . . . . . . . . .	P Near	 010C	  CODE	Length= 0045 Private
INC_GUESSTIME  . . . . . . . . .	P Near	 000E	  CODE	Length= 001D Private
INPUT_DISPLAY  . . . . . . . . .	P Near	 0177	  CODE	Length= 0026 Private
MAIN . . . . . . . . . . . . . .	P Far	 0000	  CODE	Length= 000E Private
SHOW_ANSWER  . . . . . . . . . .	P Near	 00B9	  CODE	Length= 0053 Private


Symbols:

                N a m e                 Type     Value    Attr

CLEAR_INPUT  . . . . . . . . . .	L Near	 0089	  CODE	
GUESSNUM . . . . . . . . . . . .	Byte	 0002	  DATA	
GUESSTIME  . . . . . . . . . . .	Word	 0004	  DATA	
INPUTDIGITS  . . . . . . . . . .	Byte	 0006	  DATA	
INPUTNUM . . . . . . . . . . . .	Byte	 0000	  DATA	
INPUT_NUMBER . . . . . . . . . .	L Near	 0163	  CODE	
INPUT_TWO  . . . . . . . . . . .	L Near	 003D	  CODE	
IS_BIGGER  . . . . . . . . . . .	L Near	 0077	  CODE	
IS_SMALLER . . . . . . . . . . .	L Near	 0080	  CODE	
SET_ALL_F  . . . . . . . . . . .	L Near	 012C	  CODE	

	   0 Warnings
	   0 Errors
